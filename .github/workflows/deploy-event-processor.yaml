on:
  push:
    branches:
      - "test_deploy_event_processor"

name: Deploy event-processor to Development 2

jobs:
  deploy:
    name: Deploy
    runs-on: self-hosted
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AUTONOMY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AUTONOMY_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nft-indexer
          IMAGE_TAG: event-processor-${{ github.sha }}
          DOCKERFILE: Dockerfile-event-processor
          GITHUB_USER: bitmark-bot
          GITHUB_TOKEN: ${{ secrets.ACTION_BOT_GITHUB_TOKEN }}
        run: |
          # Build a docker container and push it to ECR so that it can be deployed.
          # Build & push the docker image (check access policy: autonomy-ecr-pull-push-images)
          if ! aws ecr describe-images --repository-name="${ECR_REPOSITORY}" --image-ids="imageTag=${IMAGE_TAG}" > /dev/null 2>&1
          then
            docker build --build-arg GITHUB_USER=${GITHUB_USER} --build-arg GITHUB_TOKEN=${GITHUB_TOKEN} --tag="${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" --file="${DOCKERFILE}" "."
            docker push "${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          fi
          echo "::set-output name=image::${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"

      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.1.0
        with:
          version: '3.7.1'
        id: install-sops

      - name: Setup helmfile (include kubectl and helm)
        uses: mamezou-tech/setup-helmfile@v1.0.0
        with:
          additional-helm-plugins: https://github.com/jkroepke/helm-secrets --version v3.8.3

      - name: Set development context
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.DEVELOPMENT_KUBECONFIG_V2 }}
        id: set-kubectl-context

      - name: Deploy
        env:
          IMAGE_TAG: event-processor-${{ github.sha }}
        run: |
          helmfile --environment development -l app=event-processor apply
