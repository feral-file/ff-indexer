// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: event-processor.proto

package processor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string                 `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Blockchain string                 `protobuf:"bytes,2,opt,name=Blockchain,proto3" json:"Blockchain,omitempty"`
	Contract   string                 `protobuf:"bytes,3,opt,name=Contract,proto3" json:"Contract,omitempty"`
	From       string                 `protobuf:"bytes,4,opt,name=From,proto3" json:"From,omitempty"`
	To         string                 `protobuf:"bytes,5,opt,name=To,proto3" json:"To,omitempty"`
	TokenID    string                 `protobuf:"bytes,6,opt,name=TokenID,proto3" json:"TokenID,omitempty"`
	TXID       string                 `protobuf:"bytes,7,opt,name=TXID,proto3" json:"TXID,omitempty"`
	TXTime     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=TXTime,proto3" json:"TXTime,omitempty"`
	EventIndex uint64                 `protobuf:"varint,9,opt,name=EventIndex,proto3" json:"EventIndex,omitempty"`
}

func (x *EventInput) Reset() {
	*x = EventInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_processor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInput) ProtoMessage() {}

func (x *EventInput) ProtoReflect() protoreflect.Message {
	mi := &file_event_processor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInput.ProtoReflect.Descriptor instead.
func (*EventInput) Descriptor() ([]byte, []int) {
	return file_event_processor_proto_rawDescGZIP(), []int{0}
}

func (x *EventInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventInput) GetBlockchain() string {
	if x != nil {
		return x.Blockchain
	}
	return ""
}

func (x *EventInput) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *EventInput) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EventInput) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EventInput) GetTokenID() string {
	if x != nil {
		return x.TokenID
	}
	return ""
}

func (x *EventInput) GetTXID() string {
	if x != nil {
		return x.TXID
	}
	return ""
}

func (x *EventInput) GetTXTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TXTime
	}
	return nil
}

func (x *EventInput) GetEventIndex() uint64 {
	if x != nil {
		return x.EventIndex
	}
	return 0
}

type EventOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EventOutput) Reset() {
	*x = EventOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_processor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOutput) ProtoMessage() {}

func (x *EventOutput) ProtoReflect() protoreflect.Message {
	mi := &file_event_processor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOutput.ProtoReflect.Descriptor instead.
func (*EventOutput) Descriptor() ([]byte, []int) {
	return file_event_processor_proto_rawDescGZIP(), []int{1}
}

func (x *EventOutput) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *EventOutput) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ArchivedEventInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       *string                `protobuf:"bytes,1,opt,name=Type,proto3,oneof" json:"Type,omitempty"`
	Blockchain *string                `protobuf:"bytes,2,opt,name=Blockchain,proto3,oneof" json:"Blockchain,omitempty"`
	Contract   *string                `protobuf:"bytes,3,opt,name=Contract,proto3,oneof" json:"Contract,omitempty"`
	TokenID    *string                `protobuf:"bytes,4,opt,name=TokenID,proto3,oneof" json:"TokenID,omitempty"`
	From       *string                `protobuf:"bytes,5,opt,name=From,proto3,oneof" json:"From,omitempty"`
	To         *string                `protobuf:"bytes,6,opt,name=To,proto3,oneof" json:"To,omitempty"`
	TxID       *string                `protobuf:"bytes,7,opt,name=TxID,proto3,oneof" json:"TxID,omitempty"`
	TxFromTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=TxFromTime,proto3,oneof" json:"TxFromTime,omitempty"`
	TxToTime   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=TxToTime,proto3,oneof" json:"TxToTime,omitempty"`
	Stage      *string                `protobuf:"bytes,10,opt,name=Stage,proto3,oneof" json:"Stage,omitempty"`
	Status     *string                `protobuf:"bytes,11,opt,name=Status,proto3,oneof" json:"Status,omitempty"`
	Pagination *Pagination            `protobuf:"bytes,12,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
}

func (x *ArchivedEventInput) Reset() {
	*x = ArchivedEventInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_processor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchivedEventInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchivedEventInput) ProtoMessage() {}

func (x *ArchivedEventInput) ProtoReflect() protoreflect.Message {
	mi := &file_event_processor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchivedEventInput.ProtoReflect.Descriptor instead.
func (*ArchivedEventInput) Descriptor() ([]byte, []int) {
	return file_event_processor_proto_rawDescGZIP(), []int{2}
}

func (x *ArchivedEventInput) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ArchivedEventInput) GetBlockchain() string {
	if x != nil && x.Blockchain != nil {
		return *x.Blockchain
	}
	return ""
}

func (x *ArchivedEventInput) GetContract() string {
	if x != nil && x.Contract != nil {
		return *x.Contract
	}
	return ""
}

func (x *ArchivedEventInput) GetTokenID() string {
	if x != nil && x.TokenID != nil {
		return *x.TokenID
	}
	return ""
}

func (x *ArchivedEventInput) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *ArchivedEventInput) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

func (x *ArchivedEventInput) GetTxID() string {
	if x != nil && x.TxID != nil {
		return *x.TxID
	}
	return ""
}

func (x *ArchivedEventInput) GetTxFromTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TxFromTime
	}
	return nil
}

func (x *ArchivedEventInput) GetTxToTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TxToTime
	}
	return nil
}

func (x *ArchivedEventInput) GetStage() string {
	if x != nil && x.Stage != nil {
		return *x.Stage
	}
	return ""
}

func (x *ArchivedEventInput) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ArchivedEventInput) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_processor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_event_processor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_event_processor_proto_rawDescGZIP(), []int{3}
}

func (x *Pagination) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ArchivedEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*ArchivedEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ArchivedEvents) Reset() {
	*x = ArchivedEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_processor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchivedEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchivedEvents) ProtoMessage() {}

func (x *ArchivedEvents) ProtoReflect() protoreflect.Message {
	mi := &file_event_processor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchivedEvents.ProtoReflect.Descriptor instead.
func (*ArchivedEvents) Descriptor() ([]byte, []int) {
	return file_event_processor_proto_rawDescGZIP(), []int{4}
}

func (x *ArchivedEvents) GetEvents() []*ArchivedEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type ArchivedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type       string                 `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Blockchain string                 `protobuf:"bytes,3,opt,name=Blockchain,proto3" json:"Blockchain,omitempty"`
	Contract   string                 `protobuf:"bytes,4,opt,name=Contract,proto3" json:"Contract,omitempty"`
	TokenID    string                 `protobuf:"bytes,5,opt,name=TokenID,proto3" json:"TokenID,omitempty"`
	From       string                 `protobuf:"bytes,6,opt,name=From,proto3" json:"From,omitempty"`
	To         string                 `protobuf:"bytes,7,opt,name=To,proto3" json:"To,omitempty"`
	TxID       string                 `protobuf:"bytes,8,opt,name=TxID,proto3" json:"TxID,omitempty"`
	EventIndex uint64                 `protobuf:"varint,9,opt,name=EventIndex,proto3" json:"EventIndex,omitempty"`
	TxTime     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=TxTime,proto3" json:"TxTime,omitempty"`
	Stage      string                 `protobuf:"bytes,11,opt,name=Stage,proto3" json:"Stage,omitempty"`
	Status     string                 `protobuf:"bytes,12,opt,name=Status,proto3" json:"Status,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *ArchivedEvent) Reset() {
	*x = ArchivedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_processor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchivedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchivedEvent) ProtoMessage() {}

func (x *ArchivedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_processor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchivedEvent.ProtoReflect.Descriptor instead.
func (*ArchivedEvent) Descriptor() ([]byte, []int) {
	return file_event_processor_proto_rawDescGZIP(), []int{5}
}

func (x *ArchivedEvent) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ArchivedEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ArchivedEvent) GetBlockchain() string {
	if x != nil {
		return x.Blockchain
	}
	return ""
}

func (x *ArchivedEvent) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *ArchivedEvent) GetTokenID() string {
	if x != nil {
		return x.TokenID
	}
	return ""
}

func (x *ArchivedEvent) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ArchivedEvent) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ArchivedEvent) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *ArchivedEvent) GetEventIndex() uint64 {
	if x != nil {
		return x.EventIndex
	}
	return 0
}

func (x *ArchivedEvent) GetTxTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TxTime
	}
	return nil
}

func (x *ArchivedEvent) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *ArchivedEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ArchivedEvent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ArchivedEvent) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_event_processor_proto protoreflect.FileDescriptor

var file_event_processor_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x02, 0x0a, 0x0a, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x58, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x58, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x06, 0x54, 0x58, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x54, 0x58, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3d, 0x0a,
	0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcb, 0x04, 0x0a,
	0x12, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x54, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x02, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x04, 0x54, 0x78, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0a, 0x54, 0x78, 0x46, 0x72,
	0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x07, 0x52, 0x0a, 0x54, 0x78, 0x46, 0x72,
	0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x54, 0x78, 0x54,
	0x6f, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x08, 0x52, 0x08, 0x54, 0x78, 0x54, 0x6f, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0a, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x0b, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x54,
	0x6f, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x78, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54,
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x78,
	0x54, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x0a, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x38, 0x0a, 0x0e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xb7, 0x03, 0x0a, 0x0d, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x78, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x06, 0x54, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0x73, 0x0a, 0x0e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x09,
	0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0b, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x13, 0x2e, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x0f,
	0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_processor_proto_rawDescOnce sync.Once
	file_event_processor_proto_rawDescData = file_event_processor_proto_rawDesc
)

func file_event_processor_proto_rawDescGZIP() []byte {
	file_event_processor_proto_rawDescOnce.Do(func() {
		file_event_processor_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_processor_proto_rawDescData)
	})
	return file_event_processor_proto_rawDescData
}

var file_event_processor_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_event_processor_proto_goTypes = []interface{}{
	(*EventInput)(nil),            // 0: EventInput
	(*EventOutput)(nil),           // 1: EventOutput
	(*ArchivedEventInput)(nil),    // 2: ArchivedEventInput
	(*Pagination)(nil),            // 3: Pagination
	(*ArchivedEvents)(nil),        // 4: ArchivedEvents
	(*ArchivedEvent)(nil),         // 5: ArchivedEvent
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_event_processor_proto_depIdxs = []int32{
	6,  // 0: EventInput.TXTime:type_name -> google.protobuf.Timestamp
	6,  // 1: ArchivedEventInput.TxFromTime:type_name -> google.protobuf.Timestamp
	6,  // 2: ArchivedEventInput.TxToTime:type_name -> google.protobuf.Timestamp
	3,  // 3: ArchivedEventInput.pagination:type_name -> Pagination
	5,  // 4: ArchivedEvents.events:type_name -> ArchivedEvent
	6,  // 5: ArchivedEvent.TxTime:type_name -> google.protobuf.Timestamp
	6,  // 6: ArchivedEvent.CreatedAt:type_name -> google.protobuf.Timestamp
	6,  // 7: ArchivedEvent.UpdatedAt:type_name -> google.protobuf.Timestamp
	0,  // 8: EventProcessor.PushEvent:input_type -> EventInput
	2,  // 9: EventProcessor.GetArchivedEvents:input_type -> ArchivedEventInput
	1,  // 10: EventProcessor.PushEvent:output_type -> EventOutput
	4,  // 11: EventProcessor.GetArchivedEvents:output_type -> ArchivedEvents
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_event_processor_proto_init() }
func file_event_processor_proto_init() {
	if File_event_processor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_processor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_processor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_processor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchivedEventInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_processor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_processor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchivedEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_processor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchivedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_event_processor_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_processor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_processor_proto_goTypes,
		DependencyIndexes: file_event_processor_proto_depIdxs,
		MessageInfos:      file_event_processor_proto_msgTypes,
	}.Build()
	File_event_processor_proto = out.File
	file_event_processor_proto_rawDesc = nil
	file_event_processor_proto_goTypes = nil
	file_event_processor_proto_depIdxs = nil
}
