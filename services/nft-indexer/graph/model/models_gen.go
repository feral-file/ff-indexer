// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Artist struct {
	ID   string `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

type Asset struct {
	IndexID                   string           `json:"indexID"`
	ThumbnailID               string           `json:"thumbnailID"`
	LastRefreshedTime         *time.Time       `json:"lastRefreshedTime,omitempty"`
	Attributes                *AssetAttributes `json:"attributes,omitempty"`
	Metadata                  *AssetMetadata   `json:"metadata"`
	StaticPreviewURLLandscape *string          `json:"staticPreviewURLLandscape,omitempty"`
	StaticPreviewURLPortrait  *string          `json:"staticPreviewURLPortrait,omitempty"`
}

type AssetAttributes struct {
	Scrollable bool `json:"scrollable"`
}

type AssetMetadata struct {
	Project *VersionedProjectMetadata `json:"project"`
}

type BaseTokenInfo struct {
	ID              string `json:"id"`
	Blockchain      string `json:"blockchain"`
	Fungible        bool   `json:"fungible"`
	ContractType    string `json:"contractType"`
	ContractAddress string `json:"contractAddress"`
}

type BlockTime struct {
	BlockTime time.Time `json:"blockTime"`
}

type Collection struct {
	ID               string     `json:"id"`
	ExternalID       string     `json:"externalID"`
	Creator          string     `json:"creator"`
	Name             string     `json:"name"`
	Description      string     `json:"description"`
	Items            int64      `json:"items"`
	ImageURL         string     `json:"imageURL"`
	Blockchain       string     `json:"blockchain"`
	Contracts        []string   `json:"contracts"`
	Published        bool       `json:"published"`
	Source           string     `json:"source"`
	SourceURL        string     `json:"sourceURL"`
	ProjectURL       string     `json:"projectURL"`
	ThumbnailURL     string     `json:"thumbnailURL"`
	LastActivityTime *time.Time `json:"lastActivityTime,omitempty"`
	LastUpdatedTime  *time.Time `json:"lastUpdatedTime,omitempty"`
	CreatedAt        *time.Time `json:"createdAt,omitempty"`
}

type Identity struct {
	AccountNumber string `json:"accountNumber"`
	Blockchain    string `json:"blockchain"`
	Name          string `json:"name"`
}

type Mutation struct {
}

type Owner struct {
	Address string `json:"address"`
	Balance int64  `json:"balance"`
}

type ProjectMetadata struct {
	ArtistID            string    `json:"artistID"`
	ArtistName          string    `json:"artistName"`
	ArtistURL           string    `json:"artistURL"`
	Artists             []*Artist `json:"artists"`
	AssetID             string    `json:"assetID"`
	Title               string    `json:"title"`
	Description         string    `json:"description"`
	MimeType            string    `json:"mimeType"`
	Medium              string    `json:"medium"`
	MaxEdition          int64     `json:"maxEdition"`
	BaseCurrency        string    `json:"baseCurrency"`
	BasePrice           float64   `json:"basePrice"`
	Source              string    `json:"source"`
	SourceURL           string    `json:"sourceURL"`
	PreviewURL          string    `json:"previewURL"`
	ThumbnailURL        string    `json:"thumbnailURL"`
	GalleryThumbnailURL string    `json:"galleryThumbnailURL"`
	AssetData           string    `json:"assetData"`
	AssetURL            string    `json:"assetURL"`
	ArtworkMetadata     JSON      `json:"artworkMetadata,omitempty"`
}

type Provenance struct {
	Type        string     `json:"type"`
	Owner       string     `json:"owner"`
	Blockchain  string     `json:"blockchain"`
	BlockNumber *int64     `json:"blockNumber,omitempty"`
	Timestamp   *time.Time `json:"timestamp,omitempty"`
	TxID        string     `json:"txID"`
	TxURL       string     `json:"txURL"`
}

type Query struct {
}

type Token struct {
	ID                string           `json:"id"`
	Blockchain        string           `json:"blockchain"`
	Fungible          bool             `json:"fungible"`
	ContractType      string           `json:"contractType"`
	ContractAddress   string           `json:"contractAddress"`
	Edition           int64            `json:"edition"`
	EditionName       string           `json:"editionName"`
	MintAt            *time.Time       `json:"mintAt,omitempty"`
	MintedAt          *time.Time       `json:"mintedAt,omitempty"`
	Balance           int64            `json:"balance"`
	Owner             string           `json:"owner"`
	Owners            []*Owner         `json:"owners,omitempty"`
	OriginTokenInfo   []*BaseTokenInfo `json:"originTokenInfo,omitempty"`
	IndexID           string           `json:"indexID"`
	Source            string           `json:"source"`
	Swapped           bool             `json:"swapped"`
	Burned            bool             `json:"burned"`
	Provenance        []*Provenance    `json:"provenance"`
	LastActivityTime  *time.Time       `json:"lastActivityTime,omitempty"`
	LastRefreshedTime *time.Time       `json:"lastRefreshedTime,omitempty"`
	Asset             *Asset           `json:"asset"`
}

type VersionedProjectMetadata struct {
	Origin *ProjectMetadata `json:"origin"`
	Latest *ProjectMetadata `json:"latest"`
}
