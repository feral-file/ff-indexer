# Default values for nft-indexer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCounts:
  api: 2
  background: 3
  provenance_indexer: 2

image:
  repository: 083397868157.dkr.ecr.ap-northeast-1.amazonaws.com/nft-indexer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tags:
    api: "api-d9b08c6484c4bff745cef8c2c75eebc4dc6385df"
    background: "background-d9b08c6484c4bff745cef8c2c75eebc4dc6385df"
    provenance_indexer: "provenance-indexer-d9b08c6484c4bff745cef8c2c75eebc4dc6385df"

serviceConfig:
  jwt_public_key_name: /autonomy/production/jwtPublicKey
  cadence_hostport: cadenceau-frontend.cadenceau.svc.cluster.local:7933
  feralfile_api_url: https://feralfile.com
  cache_bucket_name: autonomy-cached-full-artwork
  opensea_ratelimit: 1
  environment: production
  network:
    tezos: livenet
    ethereum: ethereum
    bitmark: livenet
  minter_gateways:
    tz1Td5qwQxz5mDZiwk7TsRGhDU2HBvXgULip: ipfs.bitmark.com
    tz1d6EdHCR6YSpW1dNcbF9BqG1SaY1nCxrLx: ipfs.bitmark.com
  preferred_gateways:
  - ipfs.bitmark.com
  - nftstorage.link
  - ipfs.nftstorage.link
  - ipfs.io
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8089

ingress:
  enabled: true
  external_dns: true
  hosts:
    - host: indexer.autonomy.io
      uniqueSuffix: ""
      issuerRef:
        name: letsencrypt-aws-dns
        kind: ClusterIssuer
      paths:
        - "/"
    - host: indexer.feralfile.com
      uniqueSuffix: "ff1"
      issuerRef:
        name: letsencrypt-aws-dns
        kind: ClusterIssuer
      paths:
        - "/"

  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Strict-Transport-Security: max-age=10886400; includeSubDomains; preload";
      more_set_headers "X-Frame-Options: deny";
      more_set_headers "Referrer-Policy: strict-origin";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";

certificate:
  enabled: true
  issuerRef:
    name: letsencrypt-dns
    kind: ClusterIssuer

resources:
  api:
    requests:
      memory: "256Mi"
      cpu: "150m"
    limits:
      memory: "1024Mi"
      cpu: "500m"
  background: 
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1024Mi"
      cpu: "500m"
  grpc:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  provenance_indexer:
    requests:
      memory: "521Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "500m"