apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nft-event-processor.fullname" . }}
  labels:
    v: "1"
    {{- include "nft-event-processor.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nft-event-processor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "nft-event-processor.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tags.eventProcessor | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - /nft-event-processor
          ports:
            - containerPort: 8765
              protocol: TCP
              name: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NFT_INDEXER_STORE_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: store_dsn
            - name: NFT_INDEXER_INDEXER_STORE_DB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: indexer_store_db_uri
            - name: NFT_INDEXER_INDEXER_STORE_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: indexer_store_db_name
            - name: NFT_INDEXER_FEED_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: feed_api_token
            - name: NFT_INDEXER_ACCOUNT_DB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: account_db_uri
          volumeMounts:
          - name: config
            mountPath: "/.config"
            readOnly: true
      volumes:
      # You set volumes at the Pod level, then mount them into containers inside that Pod
      - name: config
        configMap:
          name: {{ include "nft-event-processor.fullname" . }}
          items:
          - key: "config.yaml"
            path: "config.yaml"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nft-event-processor.fullname" . }}-ethereum-emitter
  labels:
    v: "1"
    {{- include "nft-event-processor.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nft-event-processor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "nft-event-processor.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tags.ethereumEmitter | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - /nft-event-processor-ethereum-emitter
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NFT_INDEXER_ETHEREUM_WORKER_ACCOUNT_MNEMONIC
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: ethereum_worker_account_mnemonic
            - name: NFT_INDEXER_CACHE_STORE_DB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: cache_store_db_uri
            - name: NFT_INDEXER_ETHEREUM_RPC_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: ethereum_rpc_url
            - name: NFT_INDEXER_ETHEREUM_WS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: ethereum_ws_url
            - name: NFT_INDEXER_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: sentry_dsn
            - name: AWS_REGION
              value: ap-northeast-1
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: aws_secret_access_key
          volumeMounts:
          - name: config
            mountPath: "/.config"
            readOnly: true
      volumes:
      # You set volumes at the Pod level, then mount them into containers inside that Pod
      - name: config
        configMap:
          name: {{ include "nft-event-processor.fullname" . }}
          items:
          - key: "ethereum.yaml"
            path: "config.yaml"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nft-event-processor.fullname" . }}-tezos-emitter-new
  labels:
    v: "1"
    {{- include "nft-event-processor.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nft-event-processor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "nft-event-processor.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tags.tezosEmitter | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - /nft-event-processor-tezos-emitter
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: AWS_REGION
              value: ap-northeast-1
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: aws_secret_access_key
            - name: NFT_INDEXER_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "nft-event-processor.fullname" . }}
                  key: sentry_dsn
          volumeMounts:
          - name: config
            mountPath: "/.config"
            readOnly: true
      volumes:
      # You set volumes at the Pod level, then mount them into containers inside that Pod
      - name: config
        configMap:
          name: {{ include "nft-event-processor.fullname" . }}
          items:
          - key: "tezos.yaml"
            path: "config.yaml"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
